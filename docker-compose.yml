version: '3.8'

services:
  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - alpespartners-network
    ports:
      - "6650:6650"   
      - "8080:8080"  
      - "8082:8081"   
    command: bin/pulsar standalone
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=512m
    volumes:
      - pulsar_data:/pulsar/data
    healthcheck:
      test: ["CMD", "bin/pulsar-admin", "clusters", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongodb:
    image: mongo:7.0
    profiles: ["alpespartners", "mongodb"]
    container_name: alpespartners-mongodb
    ports:
      - "27017:27017"
    command: mongod --quiet --logpath /tmp/mongo.log --setParameter logLevel=0 > /dev/null 2>&1
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: alpespartners
    volumes:
      - ./mongo_data:/data/db
    networks:
      - alpespartners-network
  saga_log_db:
    container_name: saga_log_db
    image: postgres:17.6
    profiles: ["alpespartners", "postgres"]
    environment:
      POSTGRES_DB: "saga_log_db"
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "saga_log_pass"
      POSTGRES_ROOT_PASSWORD: "saga_log_pass"
    networks:
      - alpespartners-network
    volumes:
      - ./data/postgresql/saga_log_db:/var/lib/postgresql/data
    ports:
      - "5481:5432"
  marketing:
    build:
      context: .
      dockerfile: marketing.Dockerfile
    profiles: ["alpespartners", "marketing"]
    container_name: marketing
    command: 
      - sh
      - -c
      - |
        python -m debugpy --listen 0.0.0.0:5678 -m flask --app src/marketing/api run --host=0.0.0.0 -p 8000 --reload
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - ./src/marketing/:/src/marketing/
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_TYPE=postgresql
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=saga_log_pass
      - POSTGRES_HOST=saga_log_db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=saga_log_db
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=admin123
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=alpespartners
      - BROKER_HOST=broker
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongodb
      - broker
      - saga_log_db
    networks:
      - alpespartners-network
  tracking:
    build:
      context: .
      dockerfile: tracking.Dockerfile
    profiles: ["alpespartners", "tracking"]
    container_name: tracking
    command: 
      - sh
      - -c
      - |
        python -m debugpy --listen 0.0.0.0:5678 -m flask --app src/tracking/api run --host=0.0.0.0 -p 8000 --reload
    ports:
      - "8001:8000"
      - "5679:5678"
    volumes:
      - ./src/tracking/:/src/tracking/
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_TYPE=mongodb
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=admin123
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=alpespartners
      - BROKER_HOST=broker
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongodb
      - broker
    networks:
      - alpespartners-network
  comisiones:
    build:
      context: .
      dockerfile: comisiones.Dockerfile
    profiles: ["alpespartners", "comisiones"]
    container_name: comisiones
    command: 
      - sh
      - -c
      - |
        python -m debugpy --listen 0.0.0.0:5678 -m flask --app src/comisiones/api run --host=0.0.0.0 -p 8000 --reload
    ports:
      - "8003:8000"
      - "5680:5678"
    volumes:
      - ./src/comisiones/:/src/comisiones/
    environment:
      - DATABASE_TYPE=mongodb
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=admin123
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=alpespartners
      - BROKER_HOST=broker
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongodb
      - broker
    networks:
      - alpespartners-network
  atribucion:
    build:
      context: .
      dockerfile: atribucion.Dockerfile
    profiles: ["alpespartners", "atribucion"]
    container_name: atribucion
    command:
      - sh
      - -c
      - |
        python -m debugpy --listen 0.0.0.0:5678 -m flask --app src/atribucion/api run --host=0.0.0.0 -p 8000 --reload
    ports:
      - "8002:8000"
      - "5681:5678"
    volumes:
      - ./src/atribucion/:/src/atribucion/
    environment:
      - DATABASE_TYPE=mongodb
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=admin123
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=alpespartners
      - BROKER_HOST=broker
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongodb
      - broker
    networks:
      - alpespartners-network
  bff:
    build:
      context: .
      dockerfile: bff.Dockerfile
    profiles: ["alpespartners"]
    container_name: bff
    restart: unless-stopped
    ports:
      - "8004:8004"
    volumes:
      - ./src/bff_web/:/src/bff_web/
    environment:
      - MARKETING_SERVICE_URL=http://marketing:8000
      - TRACKING_SERVICE_URL=http://tracking:8000
      - BROKER_HOST=broker
      - PYTHONUNBUFFERED=1
    depends_on:
      - marketing
      - tracking
      - broker
    networks:
      - alpespartners-network

networks:
  alpespartners-network:
    driver: bridge

volumes:
  pulsar_data:
    driver: local
  mongodb_data:
    driver: local
